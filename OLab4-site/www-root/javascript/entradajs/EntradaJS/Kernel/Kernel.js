'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}var Resolver=use('./ControllerResolver');module.exports=function(){function Kernel(moduleManager,loader){_classCallCheck(this,Kernel);this.moduleManager=moduleManager;this.loader=loader;this.resolver=new Resolver}_createClass(Kernel,[{key:'exec',value:function exec(logicalName){if(!logicalName.includes('.')){throw new Error('Invalid logical controller name provided to the kernel: '+logicalName)}var callable=this.resolver.resolve(logicalName);return this.run(callable)}},{key:'run',value:function run(callable){var _this=this;var module=this.moduleManager.getRegisteredModule(callable.moduleName);var controllerPath=module.map().controllerPath()+'/'+callable.className;return this.loader.load(controllerPath).then(function(controller){if(!controller){throw new Error('Unable to find controller class: '+controllerPath)}var obj=Reflect.construct(controller,[module,_this.loader]);if(Reflect.has(obj,callable.methodName)){return Reflect.apply(obj[callable.methodName],obj,[])}else{throw new Error('Unable to find controller method: '+callable.className+'#'+callable.methodName)}})}}]);return Kernel}();