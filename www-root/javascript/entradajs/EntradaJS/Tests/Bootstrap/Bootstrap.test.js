'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}var Bootstrap=use('EntradaJS/Bootstrap/Bootstrap');var Loader=use('EntradaJS/File/Loader');var ClassHandler=use('EntradaJS/File/Handler/ClassHandler');var JsonHandler=use('EntradaJS/File/Handler/JsonHandler');var ScriptHandler=use('EntradaJS/File/Handler/ScriptHandler');var VueHandler=use('EntradaJS/File/Handler/VueHandler');module.exports=function(){function Bootstrap_Test(){_classCallCheck(this,Bootstrap_Test);QUnit.module('Bootstrap/Bootstrap.js')}_createClass(Bootstrap_Test,[{key:'run',value:function run(){QUnit.test('bootstrap loaded',function(assert){assert.ok(Bootstrap)});QUnit.test('bootstrap initializes the loader',function(assert){var bootstrap=new Bootstrap('../../src');assert.ok(bootstrap.loader instanceof Loader)});QUnit.test('bootstrap registers the class handler',function(assert){var bootstrap=new Bootstrap('../../src');var loader=bootstrap.loader;var handler=loader.getHandler('*');assert.ok(handler);assert.ok(handler instanceof ClassHandler)});QUnit.test('bootstrap registers the script handler',function(assert){var bootstrap=new Bootstrap('../../src');var loader=bootstrap.loader;var handler=loader.getHandler('js');assert.ok(handler);assert.ok(handler instanceof ScriptHandler)});QUnit.test('bootstrap registers the json handler',function(assert){var bootstrap=new Bootstrap('../../src');var loader=bootstrap.loader;var handler=loader.getHandler('json');assert.ok(handler);assert.ok(handler instanceof JsonHandler)});QUnit.test('bootstrap registers the vue handler',function(assert){var bootstrap=new Bootstrap('../../src');var loader=bootstrap.loader;var handler=loader.getHandler('vue');assert.ok(handler);assert.ok(handler instanceof VueHandler)});QUnit.test('bootstrap returns a promise on boot',function(assert){$('#app-root').remove();$(document.body).append('<div id="app-root" />');var bootstrap=new Bootstrap('../../src');var result=bootstrap.boot('#app-root');assert.ok(result instanceof Promise)})}}]);return Bootstrap_Test}();